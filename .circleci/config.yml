# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
    build:
        docker:
            # Specify the version you desire here
            - image: circleci/php:7.3.6-fpm-stretch-node-browsers

            # Specify service dependencies here if necessary
            # CircleCI maintains a library of pre-built images
            # documented at https://circleci.com/docs/2.0/circleci-images/
            # Using the RAM variation mitigates I/O contention
            # for database intensive operations.
            # - image: circleci/mysql:5.7-ram
            #
            # - image: redis:2.8.19

        steps:
            - checkout

            - run:
                name: install libs for extensions
                command: sudo apt update && sudo apt install zlib1g-dev libsqlite3-dev

            - run:
                name: install php extensions
                command: sudo docker-php-ext-install zip

            # Download and cache dependencies

            # composer cache
            - restore_cache:
                keys:
                    # "composer.lock" can be used if it is committed to the repo
                    - v1-dependencies-{{ checksum "composer.json" }}-{{ checksum "yarn.lock" }}
                    # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-

            - run: composer install -n --prefer-dist --no-dev

            - save_cache:
                key: composer-v1-{{ checksum "composer.lock" }}-{{ checksum "yarn.lock" }}
                paths:
                    - vendor
                    - node_modules

            - run:
                name: Save commands json
                command: cd resources && wget https://dashboard.dunctebot.com/api/commands.json -O commands.json

            - persist_to_workspace:
                  root: ./
                  paths:
                      - app
                      - public
                      - resources
                      - storage
                      - vendor

    deploy:
        docker:
            - image: circleci/node:latest

        steps:
            - checkout
            - run: yarn install

            - attach_workspace:
                  at: ./

            - run: node .circleci/deploy.js

workflows:
    version: 2
    build_and_test:
        jobs:
            - build
            - deploy:
                  requires:
                      - build
                  filters:
                      branches:
                          only:
                              - php
